{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fatimah\\\\Documents\\\\GitHub\\\\SocialMediaTBD\\\\my-react-app\\\\src\\\\storyUpload.js\",\n  _s = $RefreshSig$();\n/* Mona */\nimport react, { useState } from 'react';\nimport axios from 'axios'; // to make API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StoryUpload() {\n  _s();\n  const [file, setFile] = useState(null); /* state to manage the selected file */\n  const [preview, setPreview] = useState(null); /* state for image preview */\n  const [progress, setProgress] = useState(0); /* state to keep track of upload progress percentage */\n\n  /* function to handle file selection from input */\n  const handleChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile); // save selected file in state\n\n    /* Create a preview URL for the selected image */\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      setPreview(URL.createObjectURL(selectedFile));\n    } else {\n      setPreview(null); //reset preview if not image\n    }\n  };\n\n  /* function to handle file uploading process */\n  const handleUpload = async () => {\n    if (!file) {\n      console.error(\"no file selected.\");\n      return;\n    }\n    const formData = new FormData(); // create a new FormData object for file upload\n    formData.append('story', file); // append the selected file under 'story'\n\n    try {\n      //make a HTTP POST request to upload story\n      const response = await axios.post('/api/uploadStory', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          // calculate and update the upload progress percentage\n          const percent = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percent);\n        }\n      });\n      console.log('Upload Successful:', response.data);\n    } catch (error) {\n      console.error('Upload Failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Story\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*,video/*\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        style: {\n          maxWidth: '300px',\n          maxHeight: '300px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Select File: \", file.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upload Progress: \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryUpload, \"gT433aAToN/77gtiQbCQ+cxWbpE=\");\n_c = StoryUpload;\nexport default StoryUpload;\nvar _c;\n$RefreshReg$(_c, \"StoryUpload\");","map":{"version":3,"names":["react","useState","axios","jsxDEV","_jsxDEV","StoryUpload","_s","file","setFile","preview","setPreview","progress","setProgress","handleChange","e","selectedFile","target","files","type","startsWith","URL","createObjectURL","handleUpload","console","error","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percent","Math","round","loaded","total","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","src","alt","style","maxWidth","maxHeight","marginBottom","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Fatimah/Documents/GitHub/SocialMediaTBD/my-react-app/src/storyUpload.js"],"sourcesContent":["/* Mona */\r\nimport react, { useState } from 'react';\r\nimport axios from 'axios'; // to make API requests\r\n\r\nfunction StoryUpload() {\r\n    const [file, setFile] = useState(null);  /* state to manage the selected file */\r\n    const [preview, setPreview] = useState(null);   /* state for image preview */\r\n    const [progress, setProgress] = useState(0);   /* state to keep track of upload progress percentage */\r\n\r\n    /* function to handle file selection from input */\r\n    const handleChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        setFile(selectedFile); // save selected file in state\r\n        \r\n        /* Create a preview URL for the selected image */\r\n        if(selectedFile && selectedFile.type.startsWith('image/')) {\r\n            setPreview(URL.createObjectURL(selectedFile));\r\n        } else {\r\n            setPreview(null);  //reset preview if not image\r\n        }\r\n    };\r\n\r\n    /* function to handle file uploading process */\r\n    const handleUpload = async () => {\r\n        if(!file) {\r\n            console.error(\"no file selected.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData(); // create a new FormData object for file upload\r\n        formData.append('story', file); // append the selected file under 'story'\r\n\r\n        try {\r\n            //make a HTTP POST request to upload story\r\n            const response = await axios.post('/api/uploadStory', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n                onUploadProgress: (progressEvent) => {\r\n                    // calculate and update the upload progress percentage\r\n                    const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    setProgress(percent);\r\n                }\r\n            });\r\n\r\n            console.log('Upload Successful:', response.data);\r\n        } catch (error){\r\n            console.error('Upload Failed:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='uploadContainer'>\r\n            <h2>Upload Story</h2>\r\n            <input type=\"file\" accept=\"image/*,video/*\" onChange={handleChange}/>          \r\n            {preview && (\r\n                <div className=\"previewContainer\">\r\n                    <p>Preview:</p>\r\n                    <img src={preview} alt=\"Preview\" style={{maxWidth: '300px', maxHeight: '300px', marginBottom: '10px'}} />\r\n                </div>\r\n            )}\r\n            \r\n            {file && <p>Select File: {file.name}</p>}\r\n            <button onClick={handleUpload}>Upload</button>\r\n            {progress > 0 && <p>Upload Progress: {progress}%</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}