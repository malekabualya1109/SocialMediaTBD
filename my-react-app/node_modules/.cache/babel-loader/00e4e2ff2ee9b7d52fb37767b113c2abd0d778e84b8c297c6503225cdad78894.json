{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fatimah\\\\Documents\\\\GitHub\\\\SocialMediaTBD\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport StoryUpload from './storyUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [content, setContent] = useState('');\n  const [postMessage, setPostMessage] = useState('');\n  useEffect(() => {\n    // Fetch data from Flask backend (message from home route \"/\")\n    fetch('http://127.0.0.1:5000/').then(response => response.text()).then(data => setMessage(data)).catch(error => console.log('Error fetching data:', error));\n  }, []);\n\n  // Function to handle post submission\n  const handlePost = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: 1,\n          // Replace with dynamic user ID if needed\n          content\n        })\n      });\n      const data = await response.json();\n      if (response.status === 201) {\n        setPostMessage('Post created successfully!');\n        setContent(''); // Clear textarea\n      } else {\n        setPostMessage('Error creating post');\n      }\n    } catch (error) {\n      setPostMessage('Failed to connect to backend');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tea Talks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message || 'Backend data stuff'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"storySection\",\n      children: /*#__PURE__*/_jsxDEV(StoryUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write your post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HP4NmkylVdM1/VD0VJYmmbwo1TA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","StoryUpload","jsxDEV","_jsxDEV","App","_s","message","setMessage","content","setContent","postMessage","setPostMessage","fetch","then","response","text","data","catch","error","console","log","handlePost","method","headers","body","JSON","stringify","user_id","json","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Fatimah/Documents/GitHub/SocialMediaTBD/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport StoryUpload from './storyUpload';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [postMessage, setPostMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch data from Flask backend (message from home route \"/\")\r\n    fetch('http://127.0.0.1:5000/') \r\n      .then((response) => response.text()) \r\n      .then((data) => setMessage(data))\r\n      .catch((error) => console.log('Error fetching data:', error));\r\n  }, []);\r\n\r\n  // Function to handle post submission\r\n  const handlePost = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: 1, // Replace with dynamic user ID if needed\r\n          content,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.status === 201) {\r\n        setPostMessage('Post created successfully!');\r\n        setContent(''); // Clear textarea\r\n      } else {\r\n        setPostMessage('Error creating post');\r\n      }\r\n    } catch (error) {\r\n      setPostMessage('Failed to connect to backend');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"navigation\">\r\n        <h1>Tea Talks</h1>\r\n        <ul>\r\n          <li>Notifications</li>\r\n          <li>User Profile</li>\r\n          <li>Settings</li>\r\n        </ul>\r\n      </header>\r\n\r\n      <p>{message || 'Backend data stuff'}</p> {/* Flask message */}\r\n      <header className=\"storySection\">\r\n        <StoryUpload />\r\n      </header>\r\n      {/* Create Post Section */}\r\n      <div>\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"Write your post...\"\r\n        />\r\n        <button onClick={handlePost}>Post</button>\r\n        <p>{postMessage}</p> {/* Feedback message after posting */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}